{
    "name": "Simple Key",
    "scopeName": "source.simkey",
    "patterns": [
        {
            "name": "comment.simkey",
            "begin": "(?<=\\s|^)#(?=\\s)",
            "end": "(?<=\\s)#"
        },
        {
            "name": "entity.name.tag",
            "match": "<(META|INPUTS|EXPORTS|MACRO|IMPORTS)>(?=\\s)"
        },
        {
            "name": "keyword.declaration.parameters.simkey",
            "match": "(?<=(\\s|^))(takes)(?=\\s)"
        },
        {
            "name": "keyword.control",
            "match": "(?<=(\\s|^))(if|elseif|else|repeat|for|loop|with|async|start|end|stop|return|next)(?=\\s)"
        },
        {
            "name": "entity.name.function",
            "match": "(?<=(\\s|^))\\@[^\\s]+(?=\\s|\\[)"
        },
        {
            "name": "keyword.control",
            "match": "\\$\\$[a-zA-Z_][a-zA-Z0-9_]*(?=\\s|\\[)"
        },
        {
            "name": "constant.language.simkey",
            "match": "(\\$[a-zA-Z0-9_]*)|(none)\\b"
        },
        {
            "name": "constant.numeric.simkey",
            "match": "\\b\\d+\\b"
        },
        {
            "name": "keyword.type",
            "match": "(?<=\\s)(BOOL|VECTOR)(?=\\]|\\s|\\,)"
        },
        {
            "name": "keyword.operator",
            "match": "(?<=\\s|\\[|\\,)(true|false|=|\\+=|-=|\\*=|/=|==|!=|and|or|not|\\+|-|\\*|%|/)(?=\\s|\\]|\\,)"
        },
        {
            "name": "string.quoted.double.simkey",
            "begin": "(?<=\\s|\\[|\\,|^)\"",
            "end": "\"(?=\\s|\\]|\\,|$)",
            "patterns": [
                {
                    "match": "\\\\[\\\\\"bfnrt]",
                    "name": "constant.character.escape.simkey"
                },
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal.unrecognized-escape.simkey"
                }
            ]
        }
    ],
    "fileTypes": [
        "simkey"
    ],
    "foldingStartMarker": "\\s\\{\\s",
    "foldingStopMarker": "\\s\\}\\s"
}